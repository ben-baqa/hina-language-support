{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "hina",
	"patterns": [
		{ "include": "#scope" }
	],
	"repository": {
		"scope": {
			"patterns": [
				{ "include": "#funccall" },
				{ "include": "#letstmt" },
				{ "include": "#funcargs" },
				{ "include": "#keywords"},
				{ "include": "#multilinestr"},
				{ "include": "#strings"},
				{ "include": "#constants"},
				{ "include": "#comment block"},
				{ "include": "#comment"},
				{ "include": "#funcs" },
				{ "include": "#numbers" }
			]
		},
		"funccall": {
			"begin": "([a-zA-Z_][a-zA-Z0-9_]*)\\(",
			"end": "\\)",
			"beginCaptures": {
				"1": {
					"name": "entity.name.function"
				}
			},
			"patterns": [
				{ "include": "#scope" }
			]
		},
		"letstmt": {
			"begin": "(let)\\s([a-zA-Z_][a-zA-Z0-9_]*)",
			"end": "=|;",
			"beginCaptures": {
				"1": {
					"name": "keyword.other"
				},
				"2": {
					"name": "variable.parameter"
				}
			},
			"patterns": [
				{ "include": "#funcarg" }
			]
		},
		"funcargs": {
			"begin": "\\(([a-zA-Z_][a-zA-Z0-9_]*)\\s*",
			"end": "\\)",
			"beginCaptures": {
				"1": {
					"name": "variable.parameter"
				}
			},
			"patterns": [
				{ "include": "#funcarg" }
			]
		},
		"funcarg": {
			"match": "[a-zA-Z_][a-zA-Z0-9_]*",
			"name": "variable.parameter"
		},
		"numbers": {
			"name":"constant.numeric",
			"match": "[0-9]+(\\.[0-9]+)?"
		},
		"keywords": {
			"name": "keyword.control.hina",
			"match": "\\b(if|while|for|in|return|with|from|by|else|try)\\b"
		},
		"constants":{
			"name" : "keyword.other.hina",
			"match": "(\\b(true|false|let)\\b)|=>|:=>"
		},
		"strings": {
			"name": "string.quoted.double.hina",
			"begin": "\"",
			"end": "\"",
			"patterns": [{
				"name": "constant.character.escape.hina",
				"match": "\\\\."
			}]
		},
		"multilinestr": {
			"name": "string.quoted.double.hina",
			"begin": "\\$",
			"end": "\\$",
			"patterns": [{
				"name": "constant.character.escape.hina",
				"match": "\\\\\\$"
			}]
		},
		"comment block": {
			"name": "comment.block.hina",
			"begin": "/\\*",
			"end": "\\*/"
		},
		"comment": {
			"name": "comment.line.double-slash.hina",
			"begin": "//",
			"end": "\n"
		}
	},
	"scopeName": "source.hina"
}